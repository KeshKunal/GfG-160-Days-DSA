//You are given an array arr[] of non-negative integers.
//Your task is to move all the zeros in the array to the right end while maintaining the relative order of the non-zero elements.
//The operation must be performed in place, meaning you should not use extra space for another array.

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

// User function template for C++
class Solution {
  public:
    void pushZerosToEnd(vector<int>& arr) 
    {
        // code here
        int n=arr.size();
        int k[n];
        int j=0, count=0;
        for ( int i=0; i<n; i++)
        {
           if(arr[i]!=0)
           {
               k[j]=arr[i];
               j++;
           }
           else
                count++;
        }
        
        while(count!=0)
        {
            k[j]=0;
            j++;
            count--;
        }
        
        for(int i=0; i<n; i++)
        {
            arr[i]=k[i];
        }
        
    }
};


//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        Solution ob;
        int n = arr.size();
        ob.pushZerosToEnd(arr);
        for (int i = 0; i < n; i++) {
            cout << arr[i] << " ";
        }
        cout << "\n";
        cout << "~" << endl;
    }
    return 0;
}
// } Driver Code Ends
